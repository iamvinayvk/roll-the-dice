{"version":3,"sources":["Result.js","dice.gif","App.js","reportWebVitals.js","index.js"],"names":["Result","props","className","value","App","diceValue","useState","currentResult","setResult","onClick","setTimeout","onRoll","rollingTime","size","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQAQeA,EAPF,SAACC,GACV,OACI,qBAAKC,UAAU,SAAf,SACI,4BAAID,EAAME,W,GCJP,I,eCoCAC,MA7Bf,WACE,IAAIC,EAAU,EADD,EAEmBC,mBAC9B,KAHW,mBAENC,EAFM,KAEQC,EAFR,KAcb,OACE,sBAAKN,UAAU,MAAf,UACE,2DAEC,yBAAQO,QAbU,WACrBC,YACE,WACFF,EAAU,6BAAD,OAA8BH,MACpC,MASA,UAAmC,cAAC,IAAD,CAAOM,OAAQ,SAACR,GACjDE,EAAUF,GACTS,YAAa,IAAMC,KAAM,MAC7B,cAAC,EAAD,CAAQV,MAAOI,WChBNO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7741eddf.chunk.js","sourcesContent":["import './Result.css'\r\nconst Result=(props)=>{\r\n    return(\r\n        <div className=\"Result\" >\r\n            <p>{props.value}</p>\r\n        </div>\r\n    )\r\n}\r\nexport default Result;","export default __webpack_public_path__ + \"static/media/dice.97f3ed79.gif\";","import './App.css';\nimport React,{useState} from 'react';\nimport Result from './Result';\nimport diceImage from './dice.gif';\nimport Dice from 'react-dice-roll';\n\n\nfunction App() {\n  var diceValue=6;\n  const [currentResult,setResult]=useState(\n    ' '\n  )\n  const setResultHandler=()=>{\n    setTimeout(\n      ()=>{\n    setResult(`The Result of the roll is ${diceValue}`);}\n      ,1000)\n    ;\n    // return diceValue;\n  }\n\n  return (\n    <div className=\"App\">\n      <p>Click on The Dice to Roll:</p>\n        \n       <button onClick={setResultHandler}><Dice  onRoll={(value)=>{\n         diceValue=value;\n       }} rollingTime={1000} size={250} />\n      <Result value={currentResult} />\n     \n      </button>\n    \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}